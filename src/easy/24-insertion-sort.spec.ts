import { test } from "uvu";
import assert from "uvu/assert";

import type { TestCases } from "../utils";

import { insertionSort as fn } from "./24-insertion-sort";

test("sorts array using insertion sort algorithm", () => {
  const testCases: TestCases<typeof fn> = [
    [[[1, 17, 43, 12]], [1, 12, 17, 43]],
    [[[1]], [1]],
    [[[]], []],
    [
      [
        [
          -19, 759, 168, 306, 270, -602, 558, -821, -599, 328, 753, -50, -568,
          268, -92, 381, -96, 730, 629, 678, -837, 351, 896, 63, -85, 437, -453,
          -991, 294, -384, -628, -529, 518, 613, -319, -519, -220, -67, 834,
          619, 802, 207, 946, -904, 295, 718, -740, -557, -560, 80, 296, -90,
          401, 407, 798, 254, 154, 387, 434, 491, 228, 307, 268, 505, -415,
          -976, 676, -917, 937, -609, 593, -36, 881, 607, 121, -373, 915, -885,
          879, 391, -158, 588, -641, -937, 986, 949, -321,
        ],
      ],
      [
        -991, -976, -937, -917, -904, -885, -837, -821, -740, -641, -628, -609,
        -602, -599, -568, -560, -557, -529, -519, -453, -415, -384, -373, -321,
        -319, -220, -158, -96, -92, -90, -85, -67, -50, -36, -19, 63, 80, 121,
        154, 168, 207, 228, 254, 268, 268, 270, 294, 295, 296, 306, 307, 328,
        351, 381, 387, 391, 401, 407, 434, 437, 491, 505, 518, 558, 588, 593,
        607, 613, 619, 629, 676, 678, 718, 730, 753, 759, 798, 802, 834, 879,
        881, 896, 915, 937, 946, 949, 986,
      ],
    ],
  ];

  testCases.forEach(([args, expected], idx) => {
    assert.equal(fn(...args), expected, `failed test case at idx: ${idx}`);
  });
});

test.run();
